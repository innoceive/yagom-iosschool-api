buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'war'

jar {
	baseName = 'yagom-api'
	version = '0.0.1'
}

war {
	baseName = 'yagom-api'
	version = '0.0.1-' + new Date().format('yyyyMMdd-HHmmss')
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

def hibernateVersion = '4.3.9.Final'
def querydslVersion = '3.7.4'

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-web:1.3.6.RELEASE')
//	compile('org.springframework.boot:spring-boot-starter-velocity:1.3.6.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile("org.springframework.boot:spring-boot-starter-tomcat")
	compile("org.springframework:spring-tx")

	compile('org.apache.logging.log4j:log4j-api:2.6.2')
	compile('org.apache.logging.log4j:log4j-core:2.6.2')

	compile('org.springframework:spring-orm')
	compile(group: 'org.hibernate', name: 'hibernate-core', version: hibernateVersion)
	compile(group: 'org.hibernate', name: 'hibernate-entitymanager', version: hibernateVersion)
	compile('com.fasterxml.jackson.datatype:jackson-datatype-hibernate4:2.5.3')
	compile('mysql:mysql-connector-java:5.1.39')

	compile(group: 'com.mysema.querydsl', name: 'querydsl-core', version: querydslVersion)
	compile(group: 'com.mysema.querydsl', name: 'querydsl-jpa', version: querydslVersion)
	compile(group: 'com.mysema.querydsl', name: 'querydsl-apt', version: querydslVersion)

	compile('org.springframework.session:spring-session:1.2.1.RELEASE')
	compile('com.amazonaws:aws-java-sdk:1.11.19')
	compile('commons-io:commons-io:2.5')


	compile('net.coobird:thumbnailator:0.4.8')
	compile('org.jsoup:jsoup:1.9.2')
	compile('com.google.guava:guava:19.0')
	compile('org.ocpsoft.prettytime:prettytime:3.2.7.Final')
	compile('com.google.guava:guava:20.0')

	compile('junit:junit')


	testCompile('org.springframework.boot:spring-boot-starter-test')
}

ext {
	generatedSourcesDir = file('src/main/generated-sources')
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir generatedSourcesDir
		}
	}
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
	source = sourceSets.main.java
	classpath = configurations.compile
	options.compilerArgs = [
			'-proc:only',
			'-processor', 'com.mysema.query.apt.jpa.JPAAnnotationProcessor'
	]
	destinationDir = generatedSourcesDir
}

compileJava {
	doFirst {
		generatedSourcesDir.mkdirs();
	}
	options.compilerArgs += ['-s', generatedSourcesDir]

	dependsOn generateQueryDSL
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
